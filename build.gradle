buildscript {
    repositories {
        maven {
            url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/maven-central-proxy"
        }
        maven {
            url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/jcenter-proxy"
        }
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'

version = "0.3"

configurations {
    embed
    compile.extendsFrom(embed)
}

sourceCompatibility = targetCompatibility = 1.8

archivesBaseName = "LibInstaller"

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.50'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.google.guava:guava:17.0'
    compile 'commons-io:commons-io:2.6'
    embed 'com.github.bkenn:kfoenix:0.1.3'
    embed 'no.tornado:tornadofx:1.7.19'
    embed 'org.apache.httpcomponents:httpclient:4.5.6'
}

repositories {
    maven {
        url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/maven-central-proxy"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:none"

processResources {
    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    from 'LICENSE'
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    exclude 'kotlin', 'kotlin/**'
    exclude 'org/apache', 'org/apache/**'
    manifest.attributes(
        "Manifest-Version": 1.0
    )
    classifier 'base'
}

task sourceJar(type: Jar, dependsOn: 'jar') {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourceJar
    archives shadowJar
}

shadowJar {
    dependsOn sourceJar
    classifier ''
    manifest {
        project.tasks.jar.manifest
    }
    exclude "org/apache/logging", "org/apache/logging/**"
    exclude "org/apache/commons", "org/apache/commons/**"
    exclude "com/google", "com/google/**"
    exclude "kotlin", "kotlin/**"
    configurations = [project.configurations.compile, project.configurations.embed]
    relocate 'org.apache.http', 'com.hyperiumjailbreak.http'
}
